import { Component } from '@angular/core';
import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { PluriService } from '../../../../services/pluri.service';
import { ToastrService } from 'ngx-toastr';
import { HeaderComponent } from '../../../home/components/header/header.component';
import { StepperModule } from 'primeng/stepper';
import { CalendarModule } from 'primeng/calendar';
import { FloatLabelModule } from 'primeng/floatlabel';
import { DropdownModule } from 'primeng/dropdown';
import { InputTextModule } from 'primeng/inputtext';
import { Router } from '@angular/router';

@Component({
  selector: 'app-create-pluri',
  standalone: true,
  imports: [
    HeaderComponent,
    StepperModule,
    ReactiveFormsModule,
    CalendarModule,
    FloatLabelModule,
    DropdownModule,
    InputTextModule
  ],
  templateUrl: './create-pluri.component.html',
  styleUrl: './create-pluri.component.scss'
})
export class CreatePluriComponent {

  autoGeneratedCode = '';
  informacoesGeraisForm: FormGroup;
  trimestreOptions = [
    {label: '1ยบ Trimestre', value: 1},
    {label: '2ยบ Trimestre', value: 2},
    {label: '3ยบ Trimestre', value: 3},
    {label: '4ยบ Trimestre', value: 4}
  ];

  constructor(
    private pluriService: PluriService,
    private toastService: ToastrService,
    private router: Router
  ){
    this.informacoesGeraisForm = new FormGroup({
      codigo: new FormControl('', Validators.required),
      nome: new FormControl('', Validators.required),
      trimestre: new FormControl('', Validators.required),
      anoAplicacao: new FormControl('', Validators.required),
      dataInicioPluri: new FormControl('', Validators.required)
    });
    
    this.updateCodigo();
  }

  private extractYear(date: string): string {
    return new Date(date).getFullYear().toString();
  }

  private updateCodigo() {
    const trimestreControl = this.informacoesGeraisForm.get('trimestre');
    const anoAplicacaoControl = this.informacoesGeraisForm.get('anoAplicacao');

    if (trimestreControl && anoAplicacaoControl) {
      trimestreControl.valueChanges.subscribe(() => this.generateCodigo());
      anoAplicacaoControl.valueChanges.subscribe(() => this.generateCodigo());
    }

    this.generateCodigo();
  }

  private generateCodigo(){
    const trimestre = this.informacoesGeraisForm.get('trimestre')?.value;
    const anoAplicacao = this.informacoesGeraisForm.get('anoAplicacao')?.value;

    let tempAnoAplicacao = anoAplicacao ? this.extractYear(anoAplicacao) : '';
    let tempTrimestre = trimestre ? trimestre : ' ';
    
    this.autoGeneratedCode = `PLU-${tempTrimestre}-${tempAnoAplicacao}`;
    this.informacoesGeraisForm.get('codigo')?.setValue(this.autoGeneratedCode);
  }

  submitInformacoesGerais(){

    const formValue = this.informacoesGeraisForm.value;

    formValue.anoAplicacao = this.extractYear(formValue.anoAplicacao);

    this.pluriService.createPluri(this.informacoesGeraisForm.value).subscribe({
      next: (value) => {
        this.toastService.success("Pluri criado com sucesso!");
        this.router.navigate(['/editar-pluri', value]);
      },
      error: (e) => {
        this.toastService.error("Erro ao criar o Pluri!");
      }
    });
  }
}
